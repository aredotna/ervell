import React from 'react'
import styled from 'styled-components'

import Box from 'v2/components/UI/Box'

const Container = styled(Box).attrs({
  display: 'flex',
  justifyContent: 'center',
  alignItems: 'center',
})`
  position: relative;
  width: 100%;
  height: 100%;

  img,
  picture {
    display: block;
    max-width: 100%;
    max-height: 100%;
  }
`

interface Props {
  src: string
  srcs: string[]
  alt?: string
  fallbackToProxyJpeg?: boolean
}

export const KonnectableImg: React.FC<Props> = ({
  src,
  srcs,
  fallbackToProxyJpeg = true,
  alt = null,
}) => {
  const srcSet =
    srcs.length > 0 ? `${srcs[0]} 1x, ${srcs[1]} 2x, ${srcs[2]} 3x,` : null

  //
  // The only time we don't want to fallback to jpegs generated by proxy is when
  // the image needs to preserve transparency. Otherwise, it matters not.
  //
  const fallbackSrc = fallbackToProxyJpeg ? srcSet : src

  return (
    <Container>
      <picture>
        <source srcSet={srcSet} type="image/webp"></source>
        <source srcSet={fallbackSrc} type="image/jpg"></source>
        <img src={src} srcSet={fallbackSrc} alt={alt} />
      </picture>
    </Container>
  )
}
