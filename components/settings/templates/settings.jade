#auth-page.vam-outer
  .vam-inner
    #avatar.settings-avatar
      //- Rendered client-side

    section#auth-body
      form.auth-login-settings.auth-form
        .form__field
          input.input--wide.input--relative.is-block(
            name='first_name'
            type='text'
            value="#{user.get('first_name')}"
            placeholder='First name'
            autofocus= autofocus
            required
          )

        .form__field
          input.input--wide.input--relative.is-block(
            name='last_name'
            type='text'
            value="#{user.get('last_name')}"
            placeholder='Last name'
            autofocus= autofocus
            required
          )

        .form__field
          input.input--wide.input--relative.is-block(
            name='email'
            type='email'
            value="#{user.get('email')}"
            placeholder='Email'
            autofocus= autofocus
            required
          )

        .bordered-select
          select(name='receive_email')
            option(
              value='none'
              selected= (user.get('receive_email') === 'none') ? 'selected' : null
            ) No email notifications

            option(
              value='digest'
              selected= (user.get('receive_email') === 'digest') ? 'selected' : null
            ) Receive periodic digest email

            option(
              value='notifications'
              selected= (user.get('receive_email') === 'notifications') ? 'selected' : null
            ) Recieve one email per notification

        .bordered-select
          select(name='receive_newsletter')
            option(
              value='true'
              selected= user.get('receive_newsletter') ? 'selected' : null
            ) Subscribed to newsletter

            option(
              value='false'
              selected= !user.get('receive_newsletter') ? 'selected' : null
            ) Unsubscribed to newsletter

        if user.isPremium()
          .bordered-select.bordered-select--wide
            select(name='exclude_from_indexes')
              option(
                value='true'
                selected= user.get('exclude_from_indexes') ? 'selected' : null
              ) Exclude my content from external search engines

              option(
                value='false'
                selected= !user.get('exclude_from_indexes') ? 'selected' : null
              ) Allow search engines to crawl my content

        .form__field
          input.input--wide.input--relative.is-block(
            name='password' type='password' placeholder='Password'
          )
        .form__field
          input.input--wide.input--relative.is-block(
            name='password_confirmation' type='password' placeholder='Repeat password'
          )

        .auth-errors
          | &nbsp;

        button#auth-settings.auth-submit.button--wide.button--border.button--relative
          | Save
